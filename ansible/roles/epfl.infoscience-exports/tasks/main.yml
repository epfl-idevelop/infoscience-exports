- name: infoscience-exports deploy
  openshift:
    state: latest
    resource: Deployment
    name: "{{ deploy_name }}"
    namespace: "{{ openshift_namespace }}"
    content: |
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        annotations:
          version: "{{ image_version }}"
        labels:
          app: "{{ app_name }}"
          author: jdelasoie
          team: idev-fsd
          version: "{{ image_version }}"
        name: "{{ deploy_name }}"
        namespace: "{{ openshift_namespace }}"
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: "{{ app_name }}"
        template:
          metadata:
            labels:
              app: "{{ app_name }}"
              author: jdelasoie
              team: idev-fsd
              deployment: "{{ deploy_name }}"
          spec:
            containers:
              - env:
                  - name: MONGO_URL
                    valueFrom:
                      secretKeyRef:
                        name: "{{ secret_name }}"
                        key: mongo-url
                  - name: PORT
                    value: '3000'
                  - name: ROOT_URL
                    value: 'https://{{ cname }}'
                  - name: METEOR_SETTINGS
                    valueFrom:
                       secretKeyRef:
                        name: '{{ secret_name }}'
                        key: meteor-settings
                image: "{{ image_tag }}"
                imagePullPolicy: Always
                name: pod-infoscience-exports
                ports:
                  - containerPort: 80
                    protocol: TCP
            dnsPolicy: ClusterFirst
            restartPolicy: Always
            schedulerName: default-scheduler
            terminationGracePeriodSeconds: 30
- name: infoscience-exports service
  openshift:
    state: latest
    resource: Service
    name: "{{ svc_name }}"
    namespace: "{{ openshift_namespace }}"
    content: |
      apiVersion: v1
      kind: Service
      metadata:
        name: "{{ svc_name }}"
        namespace: "{{ openshift_namespace }}"
        labels:
          app: "{{ app_name }}"
          author: jdelasoie
          team: idev-fsd
        annotations:
          authors: idev-fsd
      spec:
        ports:
        - name: "80"
          port: 80
          protocol: TCP
          targetPort: 80
        selector:
          app: "{{ app_name }}"
          deployment: "{{ deploy_name }}"
        type: ClusterIP
- name: infoscience-exports route
  openshift:
    state: latest
    resource: Route
    name: "{{ route_name }}"
    namespace: "{{ openshift_namespace }}"
    content: |
      apiVersion: route.openshift.io/v1
      kind: Route
      metadata:
        name: "{{ route_name }}"
        namespace: "{{ openshift_namespace }}"
        labels:
          app: "{{ app_name }}"
          author: jdelasoie
          team: idev-fsd
        annotations:
          authors: idev-fsd
      spec:
        host: "{{ cname }}"
        port:
          targetPort: "80"
        tls:
          termination: edge
        to:
          kind: Service
          name: "{{ svc_name }}"
          weight: 100
        wildcardPolicy: None
- name: infoscience-exports secrets
  include_tasks: '{{ "secrets.yml" }}'
